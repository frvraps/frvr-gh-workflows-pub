name: "[Pipeline] Build and deploy Facebook Instant"

on:
  workflow_call:
    inputs:
      game_branch:
        required: true
        type: string
      game_sha:
        required: true
        type: string
      frvr_tools_branch:
        required: true
        type: string
    secrets:
      CR_PAT:
        required: true
      GH_TOKEN:
        required: true
      GCS_PROJECT:
        required: true
      AUTOMATED_RELEASE_CREDENTIALS:
        required: true
      GH_PACKAGE_REGISTRY_PAT:
        required: true
      GCS_DEVOPS_BINARY_BUCKET_KEY:
        required: true
      GCS_SA_KEY:
        required: true

jobs:
  ## --- GET GAME METADATA ---
  gather_game_data:
    name: Gather game metadata
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: Checkout game repo
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.inputs.game_sha }}

      - name: Checkout private actions
        uses: actions/checkout@v3
        with:
          repository: frvraps/frvr-gh-workflows
          token: ${{ secrets.GH_TOKEN }}
          ref: main
          path: ./actions

      - name: '[FRVR Action] Execute metadata action'
        id: metadata
        uses: ./actions/.github/actions/getmetadata
    outputs:
      game_name: ${{ steps.metadata.outputs.game_name }}

  ## --- Build Facebook Instant ---
  build_facebook_instant:
    name: Build FB Instant
    runs-on: ubuntu-latest
    timeout-minutes: 10
    needs: [gather_game_data]
    steps:
      - name: Checkout game repo
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.inputs.game_sha }}

      - name: Checkout private actions
        uses: actions/checkout@v3
        with:
          repository: frvraps/frvr-gh-workflows
          token: ${{ secrets.GH_TOKEN }}
          ref: main
          path: ./actions

      - name: Output inputs
        run: |
          echo "GAME SHA     ====> ${{ inputs.game_sha }}"
          echo "GAME BRANCH  ====> ${{ inputs.game_branch }}"
          echo "TOOLS BRANCH ====> ${{ inputs.frvr_tools_branch }}"

      - id: buildfbinstant
        name: '[FRVR Action] Build Facebook Instant'
        uses: ./actions/.github/actions/buildfbinstant
        with:
          game_name: ${{ needs.gather_game_data.outputs.game_name }}
          game_branch: ${{ inputs.game_sha }}
          frvr_tools_branch: ${{ inputs.frvr_tools_branch }}
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
          GH_PACKAGE_REGISTRY_PAT: ${{ secrets.GH_PACKAGE_REGISTRY_PAT }}
          GCS_DEVOPS_BINARY_BUCKET_KEY: ${{ secrets.GCS_DEVOPS_BINARY_BUCKET_KEY }}
          GCS_SA_KEY: ${{ secrets.GCS_SA_KEY }}

      - name: Setup tmate session
        if: always()
        uses: mxschmitt/action-tmate@v3
      
    outputs:
      filename: ${{ steps.buildfbinstant.outputs.filename }}
      build_json: ${{ steps.buildfbinstant.outputs.build_json }}
      binary_url: ${{ steps.buildfbinstant.outputs.binary_url }}

  ## --- Deploy Facebook Instant binary ---
  deploy_facebook_instant:
    name: Deploy FB Instant
    runs-on: ubuntu-latest
    timeout-minutes: 10
    needs: [gather_game_data, build_facebook_instant]
    steps:
      - name: Checkout game repo
        uses: actions/checkout@v3
        with:
          path: frvr/game-${{ needs.gather_game_data.outputs.game_name }}
          ref: ${{ inputs.game_sha }}

      - name: Checkout private actions
        uses: actions/checkout@v3
        with:
          repository: frvraps/frvr-gh-workflows
          token: ${{ secrets.GH_TOKEN }}
          ref: main
          path: ./actions

      - id: deploy_facebook
        name: '[FRVR Action] Deploy Facebook Instant'
        uses: ./actions/.github/actions/deployfbinstant
        with:
          game_name: ${{ needs.gather_game_data.outputs.game_name }}
          game_branch: ${{ inputs.game_branch }}
          frvr_tools_branch: ${{ inputs.frvr_tools_branch }}
          build_identifier: ${{ needs.build_facebook_instant.outputs.filename }}
          comment: '[GAME BRANCH] ${{ inputs.game_branch }}
          [GAME SHA] ${{ inputs.game_sha }}
          [ENGINE] ${{ inputs.frvr_tools_branch }}
          [USER] ${{ github.actor }}
          [COMMENT] AUTO DEPLOY'
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
          AUTOMATED_RELEASE_CREDENTIALS : ${{ secrets.AUTOMATED_RELEASE_CREDENTIALS }}
          GH_PACKAGE_REGISTRY_PAT: ${{ secrets.GH_PACKAGE_REGISTRY_PAT }}
          GCS_DEVOPS_BINARY_BUCKET_KEY: ${{ secrets.GCS_DEVOPS_BINARY_BUCKET_KEY }}
          GCS_SA_KEY: ${{ secrets.GCS_SA_KEY }}
    outputs:
      deploy_url: ${{ steps.deploy_facebook.outputs.deploy_url }}

  ## --- Notify slack ---
  # notify_slack:
  #   name: Notify slack
  #   runs-on: ubuntu-latest
  #   timeout-minutes: 10
  #   needs: [gather_game_data, build_facebook_instant, deploy_facebook_instant]
  #   steps:
  #     - name: Checkout game repo
  #       uses: actions/checkout@v3
  #       with:
  #         path: frvr/game-${{ needs.gather_game_data.outputs.game_name }}
  #         ref: ${{ github.event.inputs.game_branch }}

  #     - name: Checkout private actions
  #       uses: actions/checkout@v3
  #       with:
  #         repository: frvraps/frvr-gh-workflows
  #         token: ${{ secrets.GH_TOKEN }}
  #         ref: main
  #         path: ./actions

  #     - name: '[FRVR Action] Slack Notify from Pipeline'
  #       uses: ./actions/.github/actions/slacknotifypipeline
  #       with:
  #         game_name: ${{ needs.gather_game_data.outputs.game_name }}
  #         game_branch: ${{ github.event.inputs.game_branch }}
  #         frvr_tools_branch: ${{ github.event.inputs.frvr_tools_branch }}
  #         channel: 'instant'
  #         task_url: ''
  #         deploy_url: ${{ needs.deploy_facebook_instant.outputs.deploy_url }}
  #         binary_url: ${{ needs.build_facebook_instant.outputs.binary_url }}

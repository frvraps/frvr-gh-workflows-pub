name: "[CI/CD] Default XS Game CI"

on:
  workflow_call:
    inputs:
      fst_image:
        required: true
        type: string
      automation_image:
        required: true
        type: string
      QA_SERVICE:
        required: false
        type: string
      BUCKET_URI:
        required: false
        type: string
      BUCKET_URI_PREFIX:
        required: false
        type: string
    secrets:
      CR_PAT:
        required: true
      GH_TOKEN:
        required: true
      GCS_SA_KEY:
        required: true
      GCS_PROJECT:
        required: true
      GCS_DEVOPS_BINARY_BUCKET_KEY:
        required: true
      GH_PACKAGE_REGISTRY_PAT:
        required: true

jobs:
  ## --- GET GAME METADATA ---
  gather_game_data:
    name: Gather game metadata
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: Checkout game repo
        uses: actions/checkout@v3

      - name: Checkout private actions
        uses: actions/checkout@v3                     
        with:
          repository: frvraps/frvr-gh-workflows
          token: ${{ secrets.GH_TOKEN }}
          ref: PNX-958-add-screenshot-tests-action
          path: ./actions

      - id: metadata
        name: Execute metadata action
        uses: ./actions/.github/actions/getmetadata
        with:
          channel: 'web'
          frvr_tools_branch: ${{ vars.OFFICIAL_FRVR_TOOLS_BRANCH }}
          collect_kpis: 'true'
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
          QA_SERVICE: ${{ inputs.QA_SERVICE }}
    outputs:
      fst_version: ${{ steps.metadata.outputs.fst_version }}
      game_name: ${{ steps.metadata.outputs.game_name }}
      deploy_msg: ${{ steps.metadata.outputs.deploy_msg }}
      game_run_id: ${{ steps.metadata.outputs.game_run_id }}
      storage_name: ${{ steps.metadata.outputs.storage_name }}

  ## --- BUILD TO WEB ---
  build_web:
    name: Build web version
    runs-on: ubuntu-latest
    timeout-minutes: 15
    needs: [gather_game_data]
    container:
      image: ${{ inputs.fst_image }}:latest
      credentials:
        username: ${{ github.repository_owner }}
        password: ${{ secrets.CR_PAT }}
    steps:
      - name: Checkout game repo
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.inputs.game_branch }}

      - name: Checkout private actions
        uses: actions/checkout@v3
        with:
          repository: frvraps/frvr-gh-workflows
          token: ${{ secrets.GH_TOKEN }}
          ref: PNX-958-add-screenshot-tests-action
          path: ./actions

      - id: buildweb
        name: '[FRVR Action] Build action for WEB'
        uses: ./actions/.github/actions/buildweb
        with:
          game_name: ${{ needs.gather_game_data.outputs.game_name }}
          game_branch: ${{ github.event.inputs.game_branch }}
          is_ci: true
          frvr_internal_branch: ${{ github.event.inputs.frvr_internal_branch }}
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
          GCS_DEVOPS_BINARY_BUCKET_KEY: ${{ secrets.GCS_DEVOPS_BINARY_BUCKET_KEY }}
          GCS_SA_KEY: ${{ secrets.GCS_SA_KEY }}
        
    outputs:
      filename: ${{ steps.buildweb.outputs.filename }}
      build_json: ${{ steps.buildweb.outputs.build_json }}
      build_size: ${{ steps.buildweb.outputs.build_size }}

  ## --- DEPLOY TO WEB ---
  deploy_web:
    name: Deploy web version
    runs-on: ubuntu-latest
    timeout-minutes: 15
    needs: [gather_game_data, build_web]
    steps:
      - name: Checkout game repo
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.inputs.game_branch }}

      - name: Checkout private actions
        uses: actions/checkout@v3
        with:
          repository: frvraps/frvr-gh-workflows
          token: ${{ secrets.GH_TOKEN }}
          ref: PNX-958-add-screenshot-tests-action
          path: ./actions

      - id: deployweb
        name: '[FRVR Action] Deploy action for WEB'
        uses: ./actions/.github/actions/deployweb
        with:
          game_name: ${{ needs.gather_game_data.outputs.game_name }}
          game_branch: ${{ github.event.inputs.game_branch }}
          frvr_internal_branch: ${{ github.event.inputs.frvr_internal_branch }}
          deploy_msg: ${{ needs.gather_game_data.outputs.deploy_msg }}
          build_identifier: ${{ needs.build_web.outputs.filename }}
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
          AUTOMATED_RELEASE_CREDENTIALS : ${{ secrets.AUTOMATED_RELEASE_CREDENTIALS }}
          GH_PACKAGE_REGISTRY_PAT: ${{ secrets.GH_PACKAGE_REGISTRY_PAT }}
          GCS_DEVOPS_BINARY_BUCKET_KEY: ${{ secrets.GCS_DEVOPS_BINARY_BUCKET_KEY }}
          GCS_SA_KEY: ${{ secrets.GCS_SA_KEY }}
          GCS_PROJECT: ${{ secrets.GCS_PROJECT }}
    outputs:
      deploy_url: ${{ steps.deployweb.outputs.deploy_url }}

  ## --- Screenshot sanity ---
  screenshot_sanity:
    name: Screenshot sanity
    runs-on: ubuntu-latest
    timeout-minutes: 15
    needs: [gather_game_data, build_web, deploy_web]
    steps:
      - name: Checkout private actions
        uses: actions/checkout@v3
        with:
          repository: frvraps/frvr-gh-workflows
          token: ${{ secrets.GH_TOKEN }}
          ref: PNX-958-add-screenshot-tests-action
          path: ./actions

      - id: screenshottests
        name: '[FRVR Action] Perfom screenshot sanity'
        uses: ./actions/.github/actions/runscreenshottests
        with:
          game_name: ${{ needs.gather_game_data.outputs.game_name }}
          game_branch: ${{ github.event.inputs.game_branch }}
          game_url: ${{ needs.deploy_web.outputs.deploy_url }}
          game_run_id: ${{ needs.gather_game_data.outputs.game_run_id }}
          collect_kpis: 'true'
          build_size: ${{ needs.build_web.outputs.build_size}}
          storage_name: ${{ needs.gather_game_data.outputs.storage_name }}
          is_ci: true
          bucket_uri: ${{ inputs.BUCKET_URI }}
          bucket_uri_prefix: ${{ inputs.BUCKET_URI_PREFIX }}
          qa_service: ${{ inputs.QA_SERVICE }}
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
          GCS_DEVOPS_BINARY_BUCKET_KEY: ${{ secrets.GCS_DEVOPS_BINARY_BUCKET_KEY }}
    # outputs:
    #   deploy_url: ${{ steps.deployweb.outputs.deploy_url }}

  ## --- Run GUI Automated tests on WEB ---
  run_web_gui_automated_tests:
    name: GUI automated tests on web
    runs-on: ubuntu-latest
    timeout-minutes: 20
    needs: [gather_game_data, build_web, deploy_web]
    defaults:
      run:
        working-directory: /app/tests
    env:
      TEST_URL: ${{ needs.deploy_web.outputs.deploy_url }}
      HEADLESS: true
      TESTS_PATH: ${{ github.workspace }}/game/tests
    container:
      image: ${{ inputs.automation_image }}:latest
      credentials:
        username: ${{ github.repository_owner }}
        password: ${{ secrets.CR_PAT }}
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v2
        with:
          path: ${{ github.workspace }}/game
      
      - name: Install sudo
        run: |
          apt-get update && apt-get -y install sudo

      - name: Checkout private actions
        uses: actions/checkout@v2
        with:
          repository: frvraps/frvr-gh-workflows
          token: ${{ secrets.GH_TOKEN }}
          ref: PNX-958-add-screenshot-tests-action
          path: ./actions

      - name: '[FRVR Action] Web GUI tests'
        uses: ./actions/.github/actions/runwebguitests
        with:
          game_name: ${{ needs.gather_game_data.outputs.game_name }}
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
          game_run_id: ${{ needs.gather_game_data.outputs.game_run_id }}
          collect_kpis: 'true'
          qa_service: ${{ inputs.QA_SERVICE }}
        env:
          TEST_URL: ${{ needs.deploy_web.outputs.deploy_url }}
          HEADLESS: true
          TESTS_PATH: ${{ github.workspace }}/game/tests

      # - name: Setup tmate session
      #   uses: mxschmitt/action-tmate@v3

  ## --- PATCH CI run completion to QA Services ---
  signal_run_completion:
    name: Patch completion to QA Service
    runs-on: ubuntu-latest
    timeout-minutes: 5
    needs: [gather_game_data, run_web_gui_automated_tests, screenshot_sanity]
    if: always()
    steps:
      - name: Checkout game repo
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.inputs.game_branch }}

      - name: Checkout private actions
        uses: actions/checkout@v3
        with:
          repository: frvraps/frvr-gh-workflows
          token: ${{ secrets.GH_TOKEN }}
          ref: PNX-958-add-screenshot-tests-action
          path: ./actions

      - id: patch_completion
        name: '[FRVR Action] Deploy action for WEB'
        uses: ./actions/.github/actions/patchgameruncompletion
        with:
          game_run_id: ${{ needs.gather_game_data.outputs.game_run_id }}
          qa_service: ${{ inputs.QA_SERVICE }}
          success: ${{ needs.run_web_gui_automated_tests.result || needs.screenshot_sanity.result }}
